package _989_数组形式的整数加法;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		int[] a1 = { 1, 2, 6, 3, 0, 7, 1, 7, 1, 9, 7, 5, 6, 6, 4, 4, 0, 0, 6, 3 };
//		int k1 = 516;
		int[] a1 = { 0};
		int k1 = 806;
		System.out.println(addToArrayForm(a1, k1));
	}

	public List<Integer> addToArrayForm2(int[] A, int K) {
		// 设置进位
		int carry = K;
		// 倒循环 A
		for (int i = A.length - 1; i >= 0; i--) {
			// 进位与当前元素相加
			int sum = carry + A[i];
			A[i] = sum % 10;
			carry = sum / 10;
			if (carry == 0) {
				break;
			}
		}
		// 结果集合
		List<Integer> res = new ArrayList<>();
		// 如果进位不为零，还需要继续计算
		if (carry > 0) {
			while (carry > 0) {
				res.add(0, (carry % 10));
				carry = carry / 10;
			}
		}
		// 将A数组中的数据加入结果集合
		for (int i : A) {
			res.add(i);
		}
		return res;
	}

	public static List<Integer> addToArrayForm(int[] A, int K) {
		List<Integer> resultList = new ArrayList<>();
		int temp = 0;
		for (int i = A.length - 1; i >= 0; i--) {
			int sum = A[i] + temp + K % 10;
			if (sum >= 10) {
				temp = 1;
				A[i] = sum - 10;
			} else {
				temp = 0;
				A[i] = sum;
			}
			K /= 10;
			if (K == 0)
				break;
		}
		K += temp;
		while (K != 0) {
			resultList.add(0, K % 10);
			K /= 10;
		}
		for(int i:A) {
			resultList.add(i);
		}

		return resultList;
	}
}
